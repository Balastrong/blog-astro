---
import { Icon } from 'astro-icon/components';
import { type GitHubRepo, type GitHubRepository } from '~/types';
import { getRepoData } from '~/libs/github';

export type Props = {
  title?: string;
  subtitle?: string;
  highlight?: string;
  repositories: GitHubRepo[];
};

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  highlight,
  repositories = [],
} = Astro.props;

const promises = repositories?.map(async ({ owner, repo }) => (await getRepoData(owner, repo))?.json());

const items = (await Promise.allSettled(promises))
  .filter((res) => res.status === 'fulfilled')
  .map((res: any) => res.value as GitHubRepository)
  .sort((a, b) => b.stargazers_count - a.stargazers_count);
---

<section class="relative">
  <div class="absolute inset-0 bg-blue-50 dark:bg-slate-800 pointer-events-none mb-32" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 -mb-12">
    <div class="py-4 pt-8 sm:py-6 lg:py-8 lg:pt-12">
      {
        (title || subtitle || highlight) && (
          <div class="mb-8 md:mx-auto text-center max-w-3xl">
            {highlight && (
              <p
                class="text-base text-primary dark:text-blue-200 font-semibold tracking-wide uppercase"
                set:html={highlight}
              />
            )}
            {title && (
              <h2
                class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
                set:html={title}
              />
            )}

            {subtitle && (
              <p class="max-w-3xl mx-auto sm:text-center text-xl text-muted dark:text-slate-400" set:html={subtitle} />
            )}
          </div>
        )
      }
      <div class={`grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 my-12 dark:text-white items-stretch`}>
        {
          items.map(({ name, owner: { login, avatar_url, type }, description, stargazers_count, html_url }) => (
            <div class="relative flex flex-col p-6 bg-white dark:bg-slate-900 rounded-xl shadow-lg hover:shadow-md transition border border-transparent dark:border-slate-800">
              <div class="flex items-start gap-2">
                <img
                  src={avatar_url}
                  alt={login}
                  class={`w-8 h-8 ${type === 'Organization' ? 'rounded-lg' : 'rounded-full'}`}
                />
                <a href={html_url} target="_blank" rel="noopener noreferrer">
                  <span class="text-x">{login}</span> / <span class="text-xl font-bold">{name}</span>
                </a>
                <div class="flex gap-2 ml-auto items-center">
                  {stargazers_count?.toLocaleString()}
                  <Icon name="tabler:star" class="w-5 h-5" />
                </div>
              </div>
              {description && <p class="text-muted dark:text-gray-400 text-md mt-4" set:html={description} />}
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
